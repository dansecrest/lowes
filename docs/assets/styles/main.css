/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

@font-face {
  font-family: "lowes-doors-windows";
  src: url("../fonts/lowes-doors-windows.eot");
  src: url("../fonts/lowes-doors-windows.eot?#iefix") format("eot"), url("../fonts/lowes-doors-windows.woff2") format("woff2"), url("../fonts/lowes-doors-windows.woff") format("woff"), url("../fonts/lowes-doors-windows.ttf") format("truetype"), url("../fonts/lowes-doors-windows.svg#lowes-doors-windows") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"],
[class*="icon-"] {
  display: block;
  line-height: 0.5; }

[class^="icon-"]::before,
[class*="icon-"]::before {
  display: inline-block;
  font-family: "lowes-doors-windows", "Helvetica Neue", sans-serif;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1;
  speak: none;
  text-transform: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-arrow-left:before {
  content: "\EA01"; }

.icon-arrow-up:before {
  content: "\EA02"; }

.icon-arrow:before {
  content: "\EA03"; }

.icon-calendar:before {
  content: "\EA04"; }

.icon-check:before {
  content: "\EA05"; }

.icon-checkmark-hollow:before {
  content: "\EA06"; }

.icon-checkmark:before {
  content: "\EA07"; }

.icon-closing:before {
  content: "\EA08"; }

.icon-dashed-cube:before {
  content: "\EA09"; }

.icon-depth-entry-interior:before {
  content: "\EA0A"; }

.icon-depth-garage:before {
  content: "\EA0B"; }

.icon-depth-patio:before {
  content: "\EA0C"; }

.icon-depth-windows:before {
  content: "\EA0D"; }

.icon-design:before {
  content: "\EA0E"; }

.icon-fan:before {
  content: "\EA0F"; }

.icon-gears:before {
  content: "\EA10"; }

.icon-grid:before {
  content: "\EA11"; }

.icon-grille-colonial:before {
  content: "\EA12"; }

.icon-grille-diamond:before {
  content: "\EA13"; }

.icon-grille-prairie:before {
  content: "\EA14"; }

.icon-hammer:before {
  content: "\EA15"; }

.icon-handing-entry-interior:before {
  content: "\EA16"; }

.icon-height-entry-interior:before {
  content: "\EA17"; }

.icon-height-garage:before {
  content: "\EA18"; }

.icon-height-patio:before {
  content: "\EA19"; }

.icon-height-width-entry-interior:before {
  content: "\EA1A"; }

.icon-height-windows:before {
  content: "\EA1B"; }

.icon-house:before {
  content: "\EA1C"; }

.icon-location:before {
  content: "\EA1D"; }

.icon-logo-jeldwen:before {
  content: "\EA1E"; }

.icon-logo-lowes:before {
  content: "\EA1F"; }

.icon-logo-masonite:before {
  content: "\EA20"; }

.icon-logo-pella:before {
  content: "\EA21"; }

.icon-logo-reliabilt:before {
  content: "\EA22"; }

.icon-logo-thermatru:before {
  content: "\EA23"; }

.icon-logo-western-reflections:before {
  content: "\EA24"; }

.icon-material:before {
  content: "\EA25"; }

.icon-measurements:before {
  content: "\EA26"; }

.icon-nut:before {
  content: "\EA27"; }

.icon-palette:before {
  content: "\EA28"; }

.icon-palm-house:before {
  content: "\EA29"; }

.icon-performance:before {
  content: "\EA2A"; }

.icon-picture:before {
  content: "\EA2B"; }

.icon-raincloud:before {
  content: "\EA2C"; }

.icon-ruler-pencil:before {
  content: "\EA2D"; }

.icon-scratched:before {
  content: "\EA2E"; }

.icon-snowflake:before {
  content: "\EA2F"; }

.icon-squirt-bottle:before {
  content: "\EA30"; }

.icon-style-entry:before {
  content: "\EA31"; }

.icon-style-interior:before {
  content: "\EA32"; }

.icon-style-patio:before {
  content: "\EA33"; }

.icon-style-windows:before {
  content: "\EA34"; }

.icon-thermometer:before {
  content: "\EA35"; }

.icon-type-entry:before {
  content: "\EA36"; }

.icon-type-garage:before {
  content: "\EA37"; }

.icon-type-interior:before {
  content: "\EA38"; }

.icon-type-patio:before {
  content: "\EA39"; }

.icon-type-windows:before {
  content: "\EA3A"; }

.icon-vest:before {
  content: "\EA3B"; }

.icon-width-entry-interior:before {
  content: "\EA3C"; }

.icon-width-garage:before {
  content: "\EA3D"; }

.icon-width-patio:before {
  content: "\EA3E"; }

.icon-width-windows:before {
  content: "\EA3F"; }

.icon-window:before {
  content: "\EA40"; }

@font-face {
  font-family: "DIN Next";
  src: url("../fonts/din-next.eot?#iefix");
  src: url("../fonts/din-next.eot?#iefix") format("eot"), url("../fonts/din-next.woff") format("woff"), url("../fonts/din-next.ttf") format("truetype"), url("../fonts/din-next.svg#din-next") format("svg"); }

@font-face {
  font-family: "DIN Next Medium";
  src: url("../fonts/din-next-medium.eot?#iefix");
  src: url("../fonts/din-next-medium.eot?#iefix") format("eot"), url("../fonts/din-next-medium.woff") format("woff"), url("../fonts/din-next-medium.ttf") format("truetype"), url("../fonts/din-next-medium.svg#din-next-medium") format("svg"); }

@font-face {
  font-family: "DIN Next Bold";
  src: url("../fonts/din-next-bold.eot?#iefix");
  src: url("../fonts/din-next-bold.eot?#iefix") format("eot"), url("../fonts/din-next-bold.woff") format("woff"), url("../fonts/din-next-bold.ttf") format("truetype"), url("../fonts/din-next-bold.svg#din-next-bold") format("svg"); }

@font-face {
  font-family: "DIN Next Black";
  src: url("../fonts/din-next-black.eot?#iefix");
  src: url("../fonts/din-next-black.eot?#iefix") format("eot"), url("../fonts/din-next-black.woff") format("woff"), url("../fonts/din-next-black.ttf") format("truetype"), url("../fonts/din-next-black.svg#din-next-black") format("svg"); }

@font-face {
  font-family: "Helvetica Neue Light";
  src: url("../fonts/helvetica-neue-light.eot?#iefix");
  src: url("../fonts/helvetica-neue-light.eot?#iefix") format("eot"), url("../fonts/helvetica-neue-light.woff") format("woff"), url("../fonts/helvetica-neue-light.ttf") format("truetype"), url("../fonts/helvetica-neue-light.svg#helvetica-neue-light") format("svg"); }

@font-face {
  font-family: "Helvetica Neue";
  src: url("../fonts/helvetica-neue.eot?#iefix");
  src: url("../fonts/helvetica-neue.eot?#iefix") format("eot"), url("../fonts/helvetica-neue.woff") format("woff"), url("../fonts/helvetica-neue.ttf") format("truetype"), url("../fonts/helvetica-neue.svg#helvetica-neue") format("svg"); }

@font-face {
  font-family: "Helvetica Neue Medium";
  src: url("../fonts/helvetica-neue-medium.eot?#iefix");
  src: url("../fonts/helvetica-neue-medium.eot?#iefix") format("eot"), url("../fonts/helvetica-neue-medium.woff") format("woff"), url("../fonts/helvetica-neue-medium.ttf") format("truetype"), url("../fonts/helvetica-neue-medium.svg#helvetica-neue-medium") format("svg"); }

@font-face {
  font-family: "Helvetica Neue Bold";
  src: url("../fonts/helvetica-neue-bold.eot?#iefix");
  src: url("../fonts/helvetica-neue-bold.eot?#iefix") format("eot"), url("../fonts/helvetica-neue-bold.woff") format("woff"), url("../fonts/helvetica-neue-bold.ttf") format("truetype"), url("../fonts/helvetica-neue-bold.svg#helvetica-neue-bold") format("svg"); }

*, *:before, *:after {
  box-sizing: border-box; }

* {
  -webkit-tap-highlight-color: transparent; }

html {
  font-size: 16px;
  color: #333; }

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

h1, h2, h3, h4, h5, h6, p, ul, ol, fieldset {
  margin: 0;
  padding: 0;
  font-weight: normal; }

ul li {
  list-style-type: none; }

img {
  display: block; }

a {
  color: #004990;
  text-decoration: none;
  opacity: 1;
  transition: opacity 0.2s; }
  @media screen and (min-width: 47.9375em) {
    a:hover {
      opacity: 0.8; } }

hr {
  margin: 0; }

a, button, fieldset, input, label {
  border: none;
  outline: none; }

input, textarea {
  -webkit-appearance: none;
  border-radius: 0; }

.container {
  max-width: 75rem;
  margin-left: auto;
  margin-right: auto;
  padding: 0 5%; }
  @media screen and (min-width: 64em) {
    .container {
      padding: 0; } }

.header {
  position: fixed;
  z-index: 1000;
  top: 0;
  left: 0;
  width: 100%;
  height: 60px;
  padding: 0 5%;
  font-family: "DIN Next Medium", sans-serif;
  text-transform: uppercase;
  background-color: #004990;
  border-bottom: 4px solid #003f7d;
  color: #fff; }
  .header .content {
    display: -ms-flexbox;
    display: flex;
    height: 60px;
    margin-left: auto;
    margin-right: auto; }
  .header a {
    display: block;
    color: white;
    opacity: 1; }
  .header .logo, .header .actions {
    padding-bottom: 0.25rem; }
  .header .logo {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-positive: 1;
        flex-grow: 1;
    height: 60px; }
  .header .lowes {
    margin-right: 0.625rem; }
    .header .lowes img {
      width: 4.0625rem; }
  .header .title span {
    display: block;
    position: relative;
    padding: 0.1875rem 0 0 0.625rem;
    font-size: 0.75rem;
    line-height: 1.1;
    border-left: 2px solid rgba(0, 0, 0, 0.2); }
  .header nav {
    position: absolute;
    z-index: 2;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    margin-top: 60px;
    padding: 3.75rem 0 6.5625rem;
    font-size: 1.4375rem;
    text-align: center;
    background-color: #004990;
    overflow-y: scroll;
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.5s; }
    .nav-open .header nav {
      visibility: visible;
      opacity: 1; }
      .nav-open .header nav ul {
        transform: translateY(0);
        opacity: 1; }
    .header nav ul {
      transform: translateY(-75px);
      opacity: 0;
      transition: transform, opacity;
      transition-duration: 0.5s; }
  .header .links li, .header .actions li {
    display: inline-block; }
  .header .links {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column; }
    .header .links li {
      padding-bottom: 2.875rem; }
  .header .actions {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center;
    height: 60px; }
    .header .actions li {
      min-width: 0;
      margin-right: 0.9375rem;
      padding: 0; }
    .header .actions a {
      display: inline-block; }
    .header .actions i {
      display: inline-block;
      position: relative;
      top: 0.125rem;
      font-size: 1.375rem; }
    .header .actions span {
      display: none; }
  .header #nav-toggle {
    position: relative;
    width: 1.375rem;
    height: 60px; }
    .header #nav-toggle .nav-icon,
    .header #nav-toggle .nav-icon::before,
    .header #nav-toggle .nav-icon::after {
      width: 1.125rem;
      height: 0.1875rem;
      background-color: #fff; }
    .header #nav-toggle .nav-icon {
      position: absolute;
      top: 1.25rem;
      right: 0;
      margin: 0.4375rem 0;
      transition: all 0.3s; }
      .header #nav-toggle .nav-icon::before, .header #nav-toggle .nav-icon::after {
        display: block;
        position: absolute;
        top: -0.5rem;
        content: '';
        transition: all 0.3s; }
      .header #nav-toggle .nav-icon::after {
        top: 0.5rem; }
      .nav-open .header #nav-toggle .nav-icon {
        background-color: transparent; }
        .nav-open .header #nav-toggle .nav-icon::before {
          top: 0;
          transform: rotate(45deg); }
        .nav-open .header #nav-toggle .nav-icon::after {
          top: 0;
          transform: rotate(-45deg); }
  @media screen and (max-width: 78.6875em) {
    .header .actions li {
      border: none; } }
  @media screen and (min-width: 47.9375em) {
    .header {
      height: 80px;
      padding: 0 4%; }
      .header .content {
        height: 80px;
        max-width: 100rem; }
      .header .logo {
        -ms-flex-positive: 0;
            flex-grow: 0;
        height: 80px; }
      .header .lowes img {
        width: 5rem; }
      .header .title span {
        top: 0.1875rem;
        font-size: 0.875rem; }
      .header nav {
        position: relative;
        -ms-flex-positive: 2;
            flex-grow: 2;
        width: auto;
        height: 80px;
        margin: 0 8%;
        padding: 0;
        font-size: 1rem;
        background-color: transparent;
        overflow: hidden;
        visibility: visible;
        opacity: 1;
        transition: none; }
        .header nav ul {
          transform: translateY(0);
          opacity: 1;
          transition: none; }
      .header .links {
        -ms-flex-direction: row;
            flex-direction: row;
        height: 100%; }
        .header .links li {
          padding-bottom: 0;
          -ms-flex-positive: 1;
              flex-grow: 1;
          display: -ms-flexbox;
          display: flex;
          position: relative;
          -ms-flex-align: center;
              align-items: center;
          -ms-flex-pack: center;
              justify-content: center; }
        .header .links a:after {
          position: absolute;
          display: block;
          bottom: 0;
          left: 0;
          width: 100%;
          height: 0.25rem;
          content: '';
          background-color: transparent;
          transition: background-color 0.5s; }
        .header .links a:hover:after, .header .links a.selected:after {
          background-color: #15b6e5; }
      .header .actions {
        height: 80px; }
        .header .actions li:last-child {
          margin-right: 0; }
      .header #nav-toggle {
        display: none; } }
  @media screen and (min-width: 47.9375em) and (max-width: 63.9375em) {
    .header nav {
      margin: 0 5%; } }
  @media screen and (min-width: 78.75em) {
    .header .links {
      max-width: 62.5rem; }
    .header .actions li {
      padding: 0; }
      .header .actions li:first-child {
        margin-right: 1.25rem; }
      .checklist .header .actions li:last-child {
        background-color: #15b6e5;
        border-color: #15b6e5; }
    .header .actions a {
      padding: 0.4375rem 0.9375rem 0.625rem; }
    .header .actions i {
      top: 0.25rem;
      margin-right: 0.625rem;
      font-size: 1.125rem; }
    .header .actions span {
      display: inline-block;
      font-size: 0.875rem; } }
  @media screen and (min-width: 47.9375em) and (max-width: 63.9375em) {
    .header nav ul li:first-of-type {
      display: none; } }

.subnav {
  font-family: "DIN Next Medium", sans-serif;
  font-size: 1.0625rem;
  color: #fff;
  text-align: center;
  background-color: #004990; }
  .subnav .container {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-pack: center;
        justify-content: center;
    height: 14.0625rem;
    padding: 0 5%;
    overflow: hidden; }
  .subnav .question {
    padding-bottom: 1.5625rem; }
  .subnav .links {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column; }
    .subnav .links a {
      min-width: 0;
      font-family: "DIN Next Bold", sans-serif;
      color: #fff;
      text-decoration: none;
      text-transform: uppercase; }
      .subnav .links a:last-child {
        padding-bottom: 0; }
      .subnav .links a.selected {
        color: #15b6e5; }
  .subnav.condensed {
    position: fixed;
    z-index: 999;
    top: -27.5rem;
    width: 100%;
    height: 20rem;
    transition: all 1s; }
    .subnav.condensed.show {
      top: -13.125rem; }
    .subnav.condensed.open {
      top: 0; }
      .subnav.condensed.open #subnav-toggle span {
        display: none; }
      .subnav.condensed.open #subnav-toggle .icon-arrow-up::before {
        transform: rotate(0deg); }
    .subnav.condensed .container {
      height: 100%;
      padding-top: 3.75rem;
      padding-bottom: 1.875rem; }
    .subnav.condensed #subnav-toggle {
      position: absolute;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-align: center;
          align-items: center;
      -ms-flex-pack: center;
          justify-content: center;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 3.125rem; }
      .subnav.condensed #subnav-toggle span {
        margin-right: 0.3125rem;
        font-family: "DIN Next Bold", sans-serif;
        text-transform: uppercase; }
      .subnav.condensed #subnav-toggle .icon-arrow-up {
        float: right; }
        .subnav.condensed #subnav-toggle .icon-arrow-up::before {
          transform: rotate(180deg); }
  @media screen and (max-width: 47.875em) {
    .subnav .links a {
      padding: 0 0 0.9375rem;
      font-size: 1.0625rem;
      border: none; } }
  @media screen and (min-width: 47.9375em) {
    .subnav .question {
      padding-bottom: 2.5rem;
      font-size: 1.5rem; }
    .subnav .links {
      -ms-flex-direction: row;
          flex-direction: row;
      -ms-flex-pack: center;
          justify-content: center; }
      .subnav .links a {
        display: -ms-flexbox;
        display: flex;
        -ms-flex: 1;
            flex: 1;
        -ms-flex-align: center;
            align-items: center;
        -ms-flex-pack: center;
            justify-content: center;
        height: 4.8125rem;
        margin: 0 0.625rem;
        padding: 0 0.625rem; }
        .subnav .links a:first-child {
          margin-left: 0; }
        .subnav .links a:last-child {
          margin-right: 0; }
        .subnav .links a.selected {
          color: #fff;
          background-color: #15b6e5;
          border-color: #15b6e5; }
    .subnav.condensed {
      height: 8.75rem; }
      .subnav.condensed.show {
        top: 0; }
      .subnav.condensed.open {
        top: 12.5rem; }
      .subnav.condensed .container {
        height: 3.75rem;
        max-width: 46.875rem;
        margin-top: 80px;
        padding: 0; }
      .subnav.condensed .links {
        margin-top: 0;
        padding-bottom: 0; }
        .subnav.condensed .links a {
          height: auto;
          font-family: "DIN Next Medium", sans-serif;
          text-transform: capitalize;
          background-color: transparent;
          border: none; }
          .subnav.condensed .links a.selected {
            color: #15b6e5; }
      .subnav.condensed #subnav-toggle {
        display: none; } }

body {
  padding-top: 60px;
  background-color: #fff; }
  body main {
    position: relative;
    margin: -1.5625rem 0 -2.8125rem; }
  body .print {
    display: none; }
  @media screen and (min-width: 47.9375em) {
    body {
      padding-top: 80px; }
      body main {
        margin: -5.625rem 0 -8.125rem; }
      body.overview .intro + main {
        margin-top: 0; } }
  @media print {
    body .screen {
      display: none; }
    body .print {
      display: block; } }

footer {
  font-family: "DIN Next Medium", sans-serif;
  font-size: 0.875rem;
  color: #fff;
  background-color: #003f7d; }
  footer a {
    color: #fff; }
  footer .container {
    overflow: hidden; }
  footer #back-to-top {
    margin-top: 1.875rem;
    text-align: center;
    text-transform: uppercase; }
    footer #back-to-top a {
      display: block;
      width: 9.375rem;
      margin: 0 auto; }
    footer #back-to-top i {
      display: block;
      padding-bottom: 0.3125rem;
      font-size: 1.0625rem; }
  footer .sections {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: stretch;
        align-items: stretch;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    margin-top: 2.875rem;
    overflow: hidden; }
    footer .sections ul {
      -ms-flex-positive: 1;
          flex-grow: 1;
      width: 42%;
      padding-left: 8%;
      padding-bottom: 1.6875rem; }
    footer .sections li {
      padding-bottom: 0.5625rem;
      text-align: left; }
      footer .sections li:first-of-type {
        font-family: "DIN Next Bold", sans-serif; }
  footer .categories {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    margin-top: 1.25rem;
    text-align: center; }
    footer .categories ul {
      width: 100%; }
      footer .categories ul li {
        display: inline-block;
        margin: 0 4%;
        padding-bottom: 1.375rem;
        font-family: "DIN Next Bold", sans-serif; }
      footer .categories ul a {
        text-transform: uppercase; }
  footer .copyright {
    width: 80%;
    margin: 0.875rem auto 0;
    padding-bottom: 4.6875rem;
    font-family: "Helvetica Neue", sans-serif;
    font-size: 0.6875rem;
    text-align: center; }
    footer .copyright a {
      text-decoration: underline; }
    footer .copyright span {
      display: block;
      margin-top: 0.5625rem; }
  @media screen and (min-width: 47.9375em) {
    footer {
      font-size: 1.125rem; }
      footer .container {
        padding: 0; }
      footer #back-to-top {
        margin-top: 5.3125rem; }
        footer #back-to-top i {
          padding-bottom: 0.625rem;
          font-size: 1.5625rem; }
      footer .sections {
        margin-top: 5rem;
        padding: 0 10%; }
        footer .sections ul {
          width: 20%;
          padding-left: 5%; }
      footer .categories {
        margin-top: 3.125rem;
        font-size: 1.125rem; }
      footer .copyright {
        width: 70%;
        margin-top: 2.625rem;
        font-size: 0.75rem; }
        footer .copyright span {
          margin-top: 0.9375rem;
          line-height: 1.4; } }

.home {
  padding-top: 0; }
  .home main {
    z-index: 1; }
  .home .tiles {
    margin-top: 1.25rem;
    padding-bottom: 1.25rem; }
  .home .tile {
    display: block;
    position: relative;
    margin-bottom: 0.625rem; }
  .home picture img {
    width: 100%; }
  .home .overlay {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%; }
  .home h2 {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-pack: center;
        justify-content: center;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    font-family: "DIN Next Medium", sans-serif;
    font-size: 2.375rem;
    color: #fff;
    letter-spacing: -0.0625rem;
    text-align: center; }
  .home .find {
    background-color: #004990; }
  @media screen and (max-width: 47.875em) {
    .home main {
      margin: 0; }
    .home .hero h1 {
      font-size: 2rem; }
    .home .find h2 {
      position: static;
      padding: 1.875rem 0 2.5rem;
      font-size: 1.625rem; }
      .home .find h2 i {
        margin-bottom: 1.875rem;
        font-size: 6.25rem; }
      .home .find h2 br {
        display: none; }
    .home .copyright {
      margin-top: 1.875rem; } }
  @media screen and (min-width: 47.9375em) {
    .home {
      padding-top: 0; }
      .home .tiles {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
        margin: 0;
        padding: 0; }
      .home .tile {
        margin-bottom: 1.5625rem; }
        .home .tile:hover {
          opacity: 1; }
          .home .tile:hover .overlay {
            background-color: transparent; }
      .home .overlay {
        background-color: rgba(0, 0, 0, 0.2);
        transition: background-color 0.5s; }
      .home h2 {
        padding: 0 22%;
        font-size: 3.4375rem;
        letter-spacing: -0.125rem;
        line-height: 0.9; }
      .home .find h2 {
        font-size: 2.25rem;
        line-height: 1; }
        .home .find h2 i {
          margin-bottom: 1.25rem;
          font-size: 4.375rem; }
      .home footer {
        padding-top: 5.625rem; } }
  @media screen and (min-width: 47.9375em) and (max-width: 63.9375em) {
    .home .hero h1 {
      font-size: 5rem; }
    .home .tile {
      width: 48%;
      margin-right: 4%; }
      .home .tile:nth-child(2n) {
        margin-right: 0; } }
  @media screen and (min-width: 64em) {
    .home .tile {
      width: 32%;
      margin-right: 2%; }
      .home .tile:nth-child(3n) {
        margin-right: 0; } }

.error {
  background-color: #003f7d; }
  .error .hero .container {
    padding: 0 5%; }
  .error .hero h1 {
    font-size: 1.5625rem; }
  .error main {
    margin: 0; }
  .error #back-to-top {
    display: none; }
  @media all and (min-width: 47.9375em) {
    .error .hero h1 {
      font-size: 3.5625rem; }
    .error footer {
      padding-top: 0; } }
  @media all and (min-width: 78.75em) {
    .error .hero h1 {
      font-size: 4.6875rem; }
    .error footer {
      padding-top: 0; } }

.checklist {
  background-color: #f2f2f2; }
  .checklist .options section {
    position: relative;
    margin-bottom: 1.25rem;
    padding: 2.5rem 0 5.625rem;
    font-family: "DIN Next Medium", sans-serif;
    text-align: center;
    background-color: #fff; }
    .checklist .options section i {
      padding-bottom: 1rem;
      font-size: 2.5rem;
      color: #004990; }
    .checklist .options section > i {
      padding-bottom: 1rem; }
    .checklist .options section h2 {
      padding-bottom: 0.5rem;
      font-size: 1rem;
      text-transform: uppercase; }
    .checklist .options section h2 + hr {
      width: 2.8125rem;
      margin: 0 auto 1.5625rem;
      border-color: #ccc; }
    .checklist .options section hr {
      margin: 1.375rem 0 3rem;
      border: none;
      border-bottom: 1px solid #b4b4b4; }
    .checklist .options section .content {
      padding: 0 1.875rem; }
    .checklist .options section p {
      padding-bottom: 2rem;
      font-family: "Helvetica Neue", sans-serif;
      font-size: 0.875rem;
      line-height: 1.4; }
    .checklist .options section .option {
      padding: 0 1.5rem 1.375rem; }
    .checklist .options section input[type="checkbox"] {
      display: none; }
      .checklist .options section input[type="checkbox"] + label {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-align: center;
            align-items: center;
        cursor: pointer; }
      .checklist .options section input[type="checkbox"]:checked + label .circle {
        background-color: #004990;
        border-color: #004990; }
        .checklist .options section input[type="checkbox"]:checked + label .circle span {
          display: block; }
      .checklist .options section input[type="checkbox"]:checked + label .text {
        color: #004990; }
    .checklist .options section .checkbox {
      width: 20%; }
    .checklist .options section .circle {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-align: center;
          align-items: center;
      -ms-flex-pack: center;
          justify-content: center;
      width: 1.75rem;
      height: 1.75rem;
      font-size: 0.75rem;
      color: #fff;
      border: 1px solid #999;
      border-radius: 50%; }
      .checklist .options section .circle span {
        display: none; }
    .checklist .options section .text {
      width: 80%;
      margin-top: 0.1em;
      font-size: 1rem;
      color: #999;
      text-align: left; }
    .checklist .options section .number {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-align: center;
          align-items: center;
      -ms-flex-pack: center;
          justify-content: center;
      width: 1.9375rem;
      height: 1.9375rem;
      margin: 0 auto 0.9375rem;
      font-size: 1.25rem;
      color: #004990;
      border: 1px solid #004990;
      border-radius: 50%; }
      .checklist .options section .number span {
        position: relative;
        top: 0.1em; }
    .checklist .options section .link {
      position: absolute;
      bottom: 2.75rem;
      width: 100%;
      font-size: 0.75rem;
      text-transform: uppercase; }
      .checklist .options section .link i {
        display: inline-block;
        margin-right: 0.375rem;
        padding-bottom: 0;
        font-size: 0.625rem; }
      .checklist .options section .link span {
        position: relative;
        top: -0.0625rem; }
  .checklist .next h3 {
    padding-bottom: 1.375rem;
    font-size: 1.4375rem; }
  .checklist .next h4 {
    padding-bottom: 0.125rem;
    font-size: 0.6875rem;
    text-transform: uppercase; }
  .checklist .next .step {
    padding-bottom: 3rem; }
  .checklist .next .send {
    margin-bottom: 1.5rem;
    padding-bottom: 1.5rem; }
  .checklist .next #email {
    width: 100%;
    margin-bottom: 0.9375rem;
    padding: 1.25rem 0.9375rem 1.125rem;
    font-family: "Helvetica Neue", sans-serif;
    font-size: 0.875rem;
    color: #333;
    border: 1px solid #003f7d;
    box-shadow: inset 0 5px 0 0 #e5e5e5; }
    .checklist .next #email::-webkit-input-placeholder {
      color: #999; }
    .checklist .next #email:-ms-input-placeholder {
      color: #999; }
    .checklist .next #email::-moz-placeholder {
      color: #999; }
    .checklist .next #email:-moz-placeholder {
      color: #999; }
    .checklist .next #email.error {
      border: 1px solid #ec1d27; }
  .checklist .next label.error {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center;
    margin-bottom: 0.9375rem;
    font-family: "Helvetica Neue Medium", sans-serif;
    font-size: 0.75rem; }
    .checklist .next label.error::before {
      display: inline-block;
      width: 1.5rem;
      height: 1.5rem;
      margin-right: 0.5rem;
      padding-top: 0.1875rem;
      font-family: "DIN Next Bold", sans-serif;
      font-size: 1.125rem;
      content: '!';
      text-align: center;
      background-color: #ec1d27;
      border-radius: 50%; }
  .checklist .next .send {
    border-bottom: 2px solid rgba(0, 0, 0, 0.2); }
  .checklist .next .button {
    margin-bottom: 0.9375rem; }
  @media screen and (min-width: 47.9375em) {
    .checklist .options {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
    .checklist .options section {
      margin-bottom: 2.5rem;
      padding-top: 3.75rem; }
      .checklist .options section i {
        padding-bottom: 1rem;
        font-size: 3.75rem; }
      .checklist .options section > i {
        padding-bottom: 3.375rem; }
      .checklist .options section h2 {
        padding-bottom: 2rem;
        font-size: 1.5rem; }
      .checklist .options section h2 + hr {
        margin: 0 auto 2.625rem; }
      .checklist .options section hr {
        margin: 1.625rem 0 4.0625rem; }
      .checklist .options section .content {
        padding: 0 3.125rem; }
      .checklist .options section p {
        padding-bottom: 2.5rem;
        font-size: 1.25rem;
        line-height: 1.3; }
      .checklist .options section .option {
        padding: 0 0 2.5rem; }
      .checklist .options section .circle {
        width: 2.125rem;
        height: 2.125rem;
        font-size: 1rem;
        border-width: 2px; }
      .checklist .options section .text {
        font-size: 1.375rem; }
      .checklist .options section .number {
        width: 3.125rem;
        height: 3.125rem;
        margin-bottom: 0.75rem;
        font-size: 1.375rem;
        border-width: 2px; }
      .checklist .options section .link {
        bottom: 2.1875rem;
        font-size: 0.875rem; }
        .checklist .options section .link i {
          margin-right: 0.1875rem;
          font-size: 0.75rem; }
    .checklist .next h2 {
      padding: 0 0 2.375rem; }
    .checklist .next h3 {
      padding-bottom: 1.875rem;
      font-size: 2.25rem; }
    .checklist .next h4 {
      padding-bottom: 0.625rem;
      font-size: 1.125rem; }
    .checklist .next .step {
      padding-bottom: 3.625rem; }
    .checklist .next form {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: center;
          justify-content: center; }
    .checklist .next fieldset {
      position: relative;
      width: 18.75rem;
      margin-right: 1.25rem; }
    .checklist .next #email {
      height: 3.75rem;
      margin-bottom: 0;
      padding: 0.875rem 0.9375rem 1.125rem;
      font-size: 1rem; }
    .checklist .next label.error {
      position: absolute;
      left: 0;
      bottom: -2.125rem;
      margin-bottom: 0;
      text-align: left; }
    .checklist .next .send {
      min-width: 13.75rem;
      margin: 0 1.25rem 0 0;
      padding: 0 1.25rem 0 0;
      border-right: 2px solid rgba(0, 0, 0, 0.2);
      border-bottom: none; }
    .checklist .next button {
      min-width: 12.5rem;
      height: 3.75rem; }
    .checklist .next .button {
      width: 18.75rem;
      margin: 0 0.625rem 1.25rem; } }
  @media screen and (min-width: 47.9375em) and (max-width: 63.9375em) {
    .checklist .options section {
      width: 48%;
      margin-right: 4%; }
      .checklist .options section:nth-child(2n) {
        margin-right: 0; } }
  @media screen and (min-width: 64em) {
    .checklist .options section {
      width: 32%;
      margin-right: 2%; }
      .checklist .options section:nth-child(3n) {
        margin-right: 0; }
    .checklist .next label.error {
      font-size: 0.875rem; } }
  @media print {
    .checklist {
      padding-top: 0;
      background-color: transparent; }
      .checklist main {
        margin: 0; }
      .checklist .next, .checklist footer {
        display: none; }
      .checklist .header {
        position: static;
        height: auto;
        background-color: transparent;
        border-bottom: 1px solid #b4b4b4; }
        .checklist .header .actions, .checklist .header #nav-toggle {
          display: none; }
        .checklist .header .content, .checklist .header .logo {
          height: auto; }
        .checklist .header .logo {
          display: block;
          padding: 1.25rem 0 0.9375rem; }
          .checklist .header .logo a {
            float: left; }
        .checklist .header .title {
          color: #333; }
          .checklist .header .title span {
            border-left: 1px solid #b4b4b4; }
      .checklist .hero {
        height: auto;
        background-color: transparent; }
        .checklist .hero img, .checklist .hero .overlay, .checklist .hero .direction {
          display: none; }
        .checklist .hero .container {
          display: block;
          position: static;
          padding: 2.5rem 0 0.625rem; }
        .checklist .hero h1 {
          color: #004990; }
        .checklist .hero p {
          padding: 0 3.75rem;
          color: #333; }
      .checklist .options {
        display: block; }
      .checklist .options section {
        float: left;
        width: 50%;
        margin: 0;
        padding: 2.5rem 0 0;
        page-break-inside: avoid; }
        .checklist .options section:nth-child(2n+1) {
          clear: left; }
        .checklist .options section h2 + hr, .checklist .options section .link {
          display: none; }
        .checklist .options section h2 {
          padding-bottom: 1.25rem; }
        .checklist .options section hr {
          border-color: #333; }
        .checklist .options section p {
          padding-bottom: 1.5625rem; }
        .checklist .options section .option {
          padding-bottom: 0.75rem; }
        .checklist .options section input[type="checkbox"]:checked + label .circle span {
          display: none; }
        .checklist .options section input[type="checkbox"]:checked + label .circle img {
          display: block; }
        .checklist .options section .circle {
          background-color: transparent !important; }
          .checklist .options section .circle img {
            display: none;
            width: 0.75rem;
            height: 0.75rem; }
        .checklist .options section .text {
          font-size: 0.875rem;
          color: #333; }
        .checklist .options section .number {
          margin-top: 0.625rem; } }

button, .button {
  display: inline-block;
  min-width: 12.5rem;
  width: 100%;
  padding: 1.25rem 1.875rem 1.125rem;
  font-family: "DIN Next Medium", sans-serif;
  font-size: 0.875rem;
  color: #fff;
  text-align: center;
  text-transform: uppercase; }
  button.transparent, .button.transparent {
    border: 1px solid rgba(255, 255, 255, 0.4); }
  button.light, .button.light {
    color: #003f7d;
    background-color: #fff; }
  button.blue, .button.blue {
    background-color: #003f7d; }
  button.dark, .button.dark {
    background-color: rgba(0, 0, 0, 0.3); }
  @media screen and (min-width: 47.9375em) {
    button, .button {
      width: auto;
      font-size: 1rem;
      transition: background-color 0.5s, border-color 0.5s; }
      button:hover, .button:hover {
        opacity: 1; }
      button.transparent:hover, .button.transparent:hover {
        border-color: #fff; }
      button.light:hover, .button.light:hover {
        background-color: rgba(255, 255, 255, 0.85); }
      button.blue:hover, .button.blue:hover {
        background-color: #004990; }
      button.dark:hover, .button.dark:hover {
        background-color: rgba(0, 0, 0, 0.2); } }

.hero {
  position: relative;
  height: 25.9375rem;
  font-family: "DIN Next Medium", sans-serif;
  color: #fff;
  text-align: center;
  background-color: #ccc;
  overflow: hidden; }
  .hero picture img {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    margin: auto; }
  .hero .overlay {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); }
  .hero .container {
    position: absolute;
    z-index: 1;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center;
    width: 100%;
    padding: 0 10% 6.25rem; }
  .hero .content {
    width: 100%; }
  .hero .logo {
    padding-bottom: 2.1875rem; }
    .hero .logo img {
      width: 3.75rem;
      margin: 0 auto; }
  .hero h1 {
    padding-bottom: 1rem;
    font-size: 2.5rem;
    line-height: 0.9; }
  .hero p {
    font-family: "Helvetica Neue Medium", sans-serif;
    font-size: 0.875rem;
    line-height: 1.3; }
  .hero .button {
    margin-top: 1.875rem; }
  .hero .direction {
    position: absolute;
    bottom: 3.125rem;
    width: 100%;
    text-transform: uppercase; }
    .hero .direction span {
      display: block;
      padding-bottom: 0.375rem;
      font-size: 0.75rem; }
    .hero .direction i {
      font-size: 1.875rem; }
  @media screen and (min-width: 47.9375em) {
    .hero {
      height: 48rem; }
      .hero .container {
        padding: 0 0 15rem; }
      .hero .logo {
        padding-bottom: 4.375rem; }
        .hero .logo img {
          width: 8.125rem; }
      .hero h1 {
        padding: 0 5% 1rem;
        font-size: 6.375rem;
        letter-spacing: -0.1875rem; }
      .hero p {
        padding: 0 20%;
        font-size: 1.5rem; }
      .hero .button {
        margin-top: 2.8125rem; }
      .hero .direction {
        bottom: 10rem; }
        .hero .direction span {
          padding-bottom: 1.5rem;
          font-size: 1rem; }
        .hero .direction i {
          font-size: 2.25rem; } }
  @media screen and (min-width: 47.9375em) and (max-width: 99.9375em) {
    .hero picture img {
      width: auto;
      height: 100%; } }

.intro {
  margin-bottom: 2.8125rem;
  background-color: #f2f2f2; }
  .intro .card {
    text-align: center;
    background-color: #fff; }
    .intro .card:last-of-type .content {
      border-bottom: none; }
    .intro .card .content {
      margin: 0 5%;
      padding: 1.875rem 5% 2.1875rem;
      border-bottom: 1px solid #e5e5e5; }
    .intro .card i {
      padding-bottom: 1.875rem;
      font-size: 60px;
      color: #004990; }
    .intro .card h2, .intro .card h3 {
      padding-bottom: 0.625rem;
      font-family: "DIN Next Medium", sans-serif;
      font-size: 1.125rem; }
    .intro .card p {
      font-family: "Helvetica Neue", sans-serif; }
  @media screen and (min-width: 47.9375em) {
    .intro {
      position: relative;
      font-size: 0.75rem; }
      .intro .container {
        display: -ms-flexbox;
        display: flex; }
      .intro .card {
        margin-right: 0.9375rem;
        width: 33.333%; }
        .intro .card:last-of-type {
          margin-right: 0; }
        .intro .card .content {
          margin: 0;
          padding: 3.5625rem 10% 4.1875rem;
          border-bottom: none; } }
  @media screen and (min-width: 78.75em) {
    .intro {
      font-size: 1.25rem; }
      .intro .card i {
        padding-bottom: 3.125rem; }
      .intro .card h2, .intro .card h3 {
        padding-bottom: 0.4375rem;
        font-size: 1.5rem; }
      .intro .card p {
        line-height: 1.5; } }
  .intro .offset {
    position: relative;
    top: -1.5625rem; }
  .intro .button {
    margin-top: 1.5625rem; }
  @media screen and (min-width: 47.9375em) {
    .intro + main > .inspiration:first-of-type .content {
      background-color: #fff; }
      .overview .intro + main > .inspiration:first-of-type .content {
        background-color: #f2f2f2; }
    .intro .offset {
      top: -5.625rem; }
    .intro .container {
      display: -ms-flexbox;
      display: flex; }
    .intro .action {
      position: relative;
      bottom: -2.8125rem; }
    .intro .button {
      margin: 0 auto; } }

.inspiration {
  margin-bottom: 1.25rem;
  font-family: "Helvetica Neue", sans-serif;
  font-size: 0.75rem;
  background-color: #f2f2f2; }
  .inspiration:nth-child(even) .flex-container {
    -ms-flex-direction: column-reverse;
        flex-direction: column-reverse; }
    .inspiration:nth-child(even) .flex-container .caption {
      border-bottom: none; }
  .inspiration .flex-container {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column; }
  .inspiration .content {
    position: relative;
    padding: 1.875rem 10% 2.5rem; }
  .inspiration .prehead {
    display: inline-block;
    padding-bottom: 0.3125rem;
    font-family: "DIN Next Medium", sans-serif;
    font-size: 0.75rem;
    color: #999;
    text-transform: uppercase; }
  .inspiration h2, .inspiration p {
    padding-right: 5%; }
  .inspiration h2 {
    padding-bottom: 1.25rem;
    font-family: "DIN Next Medium", sans-serif;
    font-size: 1.5625rem; }
  .inspiration p {
    padding-bottom: 1.5rem;
    line-height: 1.5; }
  .inspiration ul {
    margin: 0.1875rem 0 1.25rem 0.3125rem; }
    .inspiration ul li {
      margin-left: 0.625rem;
      padding-bottom: 0.3125rem;
      list-style-type: initial; }
  .inspiration .link-blue {
    display: block;
    padding-bottom: 1.875rem;
    text-decoration: underline; }
  .inspiration .button {
    max-width: 17.5rem;
    margin-top: 0.625rem; }
  .inspiration .image-container {
    position: relative; }
  .inspiration img {
    width: 100%; }
  .inspiration > .image-container .caption {
    border-bottom: none; }
  .inspiration .caption {
    position: relative;
    margin: 0 5%;
    padding: 0.4375rem 0;
    border-bottom: 1px solid #ccc; }
    .inspiration .caption i {
      font-size: 1.6875rem;
      text-align: right; }
      .inspiration .caption i.icon-logo-jeldwen .inspiration .caption i.icon-logo-masonite, .inspiration .caption i.icon-logo-thermatru, .inspiration .caption i.icon-logo-western-reflections {
        font-size: 1.25rem; }
    .inspiration .caption span {
      display: none; }
    .inspiration .caption:after {
      position: absolute;
      top: -20px;
      right: 0;
      width: 0;
      height: 0;
      margin-left: -10px;
      content: " ";
      border: solid transparent;
      border-color: rgba(204, 204, 204, 0);
      border-bottom-color: #f2f2f2;
      border-width: 10px;
      pointer-events: none; }
  .inspiration .disclaimer {
    position: absolute;
    bottom: 1.875rem;
    font-size: 0.625rem; }
  @media screen and (min-width: 47.9375em) {
    .inspiration {
      margin-bottom: 2.5rem; }
      .inspiration:nth-child(even) .flex-container {
        -ms-flex-direction: row-reverse;
            flex-direction: row-reverse; }
      .inspiration .flex-container {
        -ms-flex-direction: row;
            flex-direction: row; }
        .inspiration .flex-container > * {
          width: 50%; }
      .inspiration .content {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: column;
            flex-direction: column;
        -ms-flex-pack: center;
            justify-content: center;
        padding-left: 5%;
        padding-right: 5%; }
      .inspiration .caption {
        background: rgba(255, 255, 255, 0);
        /* Old browsers */
        /* FF3.6+ */
        background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(255, 255, 255, 0)), color-stop(100%, rgba(0, 0, 0, 0.7)));
        /* Chrome,Safari4+ */
        /* Chrome10+,Safari5.1+ */
        /* Opera 11.10+ */
        /* IE10+ */
        background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, rgba(0, 0, 0, 0.7) 100%);
        /* W3C */
        position: absolute;
        bottom: 0;
        width: 100%;
        margin: 0;
        padding: 0.9375rem 0.9375rem;
        border-bottom: none; }
        .inspiration .caption:after {
          display: none; }
        .inspiration .caption i {
          float: left;
          font-size: 2.5rem;
          color: #fff; }
          .inspiration .caption i.icon-logo-jeldwen, .inspiration .caption i.icon-logo-masonite, .inspiration .caption i.icon-logo-thermatru, .inspiration .caption i.icon-logo-western-reflections {
            font-size: 1.6875rem; }
        .inspiration .caption span {
          display: inline-block;
          float: left;
          padding-top: 0.875rem;
          padding-left: 0.3125rem;
          font-family: "DIN Next Medium", sans-serif;
          font-size: 0.875rem;
          color: #fff;
          text-transform: uppercase; } }
  @media screen and (min-width: 78.75em) {
    .inspiration {
      font-size: 1.25rem; }
      .inspiration .content {
        padding: 0 7.8125rem; }
      .inspiration .prehead {
        padding-bottom: 0.625rem;
        font-size: 1.25rem; }
      .inspiration h2 {
        font-size: 2.25rem; }
      .inspiration ul li {
        padding-bottom: 0.625rem; }
      .inspiration .button {
        margin-top: 1.875rem; } }

.outro {
  margin-top: 3.4375rem;
  background-color: #fff; }
  .outro .card {
    text-align: center;
    background-color: #fff; }
    .outro .card:last-of-type .content {
      border-bottom: none; }
    .outro .card .content {
      margin: 0 5%;
      padding: 1.875rem 5% 2.1875rem;
      border-bottom: 1px solid #e5e5e5; }
    .outro .card i {
      padding-bottom: 1.875rem;
      font-size: 150px;
      color: #004990; }
    .outro .card h2, .outro .card h3 {
      padding-bottom: 0.625rem;
      font-family: "DIN Next Medium", sans-serif;
      font-size: 1.125rem; }
    .outro .card p {
      font-family: "Helvetica Neue", sans-serif; }
  @media screen and (min-width: 47.9375em) {
    .outro {
      position: relative;
      font-size: 0.75rem; }
      .outro .container {
        display: -ms-flexbox;
        display: flex; }
      .outro .card {
        margin-right: 0.9375rem;
        width: 33.333%; }
        .outro .card:last-of-type {
          margin-right: 0; }
        .outro .card .content {
          margin: 0;
          padding: 3.5625rem 10% 4.1875rem;
          border-bottom: none; } }
  @media screen and (min-width: 78.75em) {
    .outro {
      font-size: 1.25rem; }
      .outro .card i {
        padding-bottom: 3.125rem; }
      .outro .card h2, .outro .card h3 {
        padding-bottom: 0.4375rem;
        font-size: 1.5rem; }
      .outro .card p {
        line-height: 1.5; } }
  .outro h2 {
    margin-bottom: 0.3125rem;
    padding: 0 10%;
    font-family: "DIN Next Medium", sans-serif;
    font-size: 1.5625rem;
    text-align: center; }
  @media screen and (min-width: 78.75em) {
    .outro {
      margin-top: 6.875rem; }
      .outro h2 {
        padding: 0 30%;
        font-size: 2.25rem; } }

.next {
  padding: 5.625rem 5% 0;
  font-family: "DIN Next Medium", sans-serif;
  color: #fff;
  text-align: center;
  background-color: #003f7d;
  border-bottom: 2px solid rgba(0, 0, 0, 0.2); }
  .next h2 {
    padding-bottom: 1.5625rem;
    font-size: 2.125rem;
    line-height: 1.1; }
  .next p {
    padding-bottom: 2.1875rem;
    font-family: "Helvetica Neue Medium", sans-serif;
    font-size: 0.875rem;
    line-height: 1.3; }
  .next .button {
    margin-bottom: 3.125rem; }
  @media screen and (min-width: 47.9375em) {
    .next {
      padding: 12.8125rem 0 0; }
      .next h2 {
        padding: 0 5% 1.5625rem;
        font-size: 4.6875rem;
        line-height: 1;
        letter-spacing: -0.1875rem; }
      .next p {
        padding: 0 15% 3.75rem;
        font-size: 1.5rem; }
      .next .button {
        margin-bottom: 6.25rem; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
